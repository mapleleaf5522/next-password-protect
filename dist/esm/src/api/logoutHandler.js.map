{"version":3,"file":"logoutHandler.js","sources":["../../../../src/api/logoutHandler.ts"],"sourcesContent":["import { Request, Response } from 'express';\n\nimport { sendJson } from './sendJson';\nimport { setCookie } from './setCookie';\n\ninterface PasswordProtectHandlerOptions {\n  /* @default next-password-protect */\n  cookieName?: string;\n  cookieSameSite?: boolean | 'lax' | 'none' | 'strict';\n  cookieSecure?: boolean;\n}\n\nexport const logoutHandler = (\n  options?: PasswordProtectHandlerOptions,\n) => async (req: Request, res: Response) => {\n  res.setHeader('Content-Type', 'application/json');\n\n  try {\n    if (req.method !== 'POST') {\n      throw new Error('Invalid method.');\n    }\n\n    setCookie(res, options?.cookieName || 'next-password-protect', '', {\n      httpOnly: true,\n      sameSite: options?.cookieSameSite || false,\n      secure:\n        options?.cookieSecure !== undefined\n          ? options?.cookieSecure\n          : process.env.NODE_ENV === 'production',\n      path: '/',\n      maxAge: 0,\n    });\n\n    sendJson(res, 200);\n  } catch (err) {\n    sendJson(res, 500, { message: err.message || 'An error has occured.' });\n  }\n};\n"],"names":["logoutHandler","options","req","res","setHeader","method","Error","setCookie","cookieName","httpOnly","sameSite","cookieSameSite","secure","undefined","cookieSecure","process","env","NODE_ENV","path","maxAge","sendJson","err","message"],"mappings":"2KAYaA,EAAgB,SAC3BC,UACG,SAAOC,EAAcC,wEACxBA,EAAIC,UAAU,eAAgB,2BAGT,SAAfF,EAAIG,aACA,IAAIC,MAAM,mBAGlBC,EAAUJ,GAAKF,MAAAA,SAAAA,EAASO,aAAc,wBAAyB,GAAI,CACjEC,UAAU,EACVC,UAAUT,MAAAA,SAAAA,EAASU,kBAAkB,EACrCC,YAC4BC,KAA1BZ,MAAAA,SAAAA,EAASa,cACLb,MAAAA,SAAAA,EAASa,aACgB,eAAzBC,QAAQC,IAAIC,SAClBC,KAAM,IACNC,OAAQ,IAGVC,EAASjB,EAAK,KACd,MAAOkB,GACPD,EAASjB,EAAK,IAAK,CAAEmB,QAASD,EAAIC,SAAW"}